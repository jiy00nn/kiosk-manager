/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dto.BookDto;
import dto.CheckoutBookDto;
import dto.UserDto;
import controller.ManagementUser;
import java.awt.event.ActionEvent;
import java.util.List;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

public class EditUserInfo extends javax.swing.JFrame {

    private UserDto user = new UserDto();
    private ManagementUser management = new ManagementUser();
    private List<CheckoutBookDto> check_out = new ArrayList();
    private List<BookDto> book_list = new ArrayList();
    private DefaultTableModel model;
    
    public EditUserInfo(UserDto user) {
        initComponents();
        this.user = user;
        model = (DefaultTableModel) info.getModel(); 
        try {
            management.getUserInfo(user);
            this.check_out = management.getCheckOutBookList();
            this.book_list = management.getBookList();
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "Cannot load user information.");
        } catch (ParseException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "Cannot load user information.");
        }
        
        this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        showUserInfo();
        tableRightClick();
        updateModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        info = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        jLabel1.setText("회원정보 수정 및 삭제");

        jLabel2.setText("Name :");

        jLabel4.setText("Passowrd :");

        nameField.setEnabled(false);

        jButton2.setText("수정");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("삭제");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("ID :");

        info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Rental Book", "Rental Date", "Return Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(info);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameField)
                    .addComponent(idField)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.user.setId(idField.getText());
        this.user.setPassword(passwordField.getText());
        try {
            management.updateUserInfo(user, check_out);
            javax.swing.JOptionPane.showMessageDialog(null, "Reflect modifications complete.");
            this.setVisible(false);
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, "Cannot update user information.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new DeleteUser(user, this).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void showUserInfo() {
        nameField.setText(user.getName());
        idField.setText(user.getId());
        passwordField.setText(user.getPassword());
        
        model.setNumRows(0);
        
        for(int i = 0 ; i < check_out.size() ; i++) {
            CheckoutBookDto c_book = check_out.get(i);
            BookDto book_info = book_list.get(i);
            Object[] row = {book_info.getTitle(), c_book.getRentalStringDate(), c_book.getReturnStringDate()};
            model.addRow(row);
        }
        
        info.setModel(model);
    }
    
    private void tableRightClick() {
        info.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent e){
                int r = info.rowAtPoint(e.getPoint());
                if (r >= 0 && r < info.getRowCount()) {
                    info.setRowSelectionInterval(r, r);
                } else {
                    info.clearSelection();
                }

                int rowindex = info.getSelectedRow();
                if (rowindex < 0)
                    return;
                if (e.isPopupTrigger() && e.getComponent() instanceof javax.swing.JTable ) {
                    if (e.isPopupTrigger() && e.getComponent() instanceof javax.swing.JTable ) {
                        javax.swing.JPopupMenu popup = new javax.swing.JPopupMenu();
                        javax.swing.JMenuItem item = new javax.swing.JMenuItem("삭제");
                        item.addActionListener(new java.awt.event.ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent e) {
                                try {
                                    management.deleteCheckOutBook(book_list.get(rowindex).getId());
                                    check_out.remove(rowindex);
                                    book_list.remove(rowindex);
                                } catch (SQLException ex) {
                                    javax.swing.JOptionPane.showMessageDialog(null, "Cannot delete this information.");
                                }
                            }
                        });
                        
                        popup.add(item);
                        popup.show(e.getComponent(), e.getX(), e.getY());
                    }
                }
            }
        });
    }
    
    private void updateModel() {
        info.getModel().addTableModelListener(new javax.swing.event.TableModelListener(){
            @Override
            public void tableChanged(TableModelEvent e) {
                int rowindex = info.getSelectedRow();
                if(info.isEditing()){
                    String value = info.getValueAt(rowindex, 2).toString();
                    try {
                        check_out.get(rowindex).setReturnDate(value);
                    } catch (ParseException ex) {
                        javax.swing.JOptionPane.showMessageDialog(null, "Enter the date in the format 'yyyy-mm-dd'.");
                    }
                }
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idField;
    private javax.swing.JTable info;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField passwordField;
    // End of variables declaration//GEN-END:variables
}
